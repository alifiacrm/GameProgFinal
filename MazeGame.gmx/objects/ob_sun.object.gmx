<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sun_b</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(place_snapped(32,32)){
    sprite_index=sun_b;
    image_speed = 0.4 ;
    var rnd = random_range(0,1);
    if(rnd&lt;=0.75) {
          if (!place_meeting(x, y-10, ob_wall)&amp;&amp; direction!=270&amp;&amp;y&gt;ob_pl.y) {
               sprite_index=sun_u;
               direction=90;
               speed=2;
           } 
         else if (!place_meeting(x, y+10, ob_wall)&amp;&amp; !place_meeting(x, y+10, ob_wall)&amp;&amp; direction!=90&amp;&amp;y&lt;ob_pl.y) {
               sprite_index=sun_b;
               direction=270;
               speed=2;
           } 
         else if (!place_meeting(x-10, y, ob_wall)&amp;&amp; direction!=0&amp;&amp;x&gt;ob_pl.x) {
               sprite_index=sun_l;
               direction=180;
               speed=2;
           } 
         else if (!place_meeting(x+10, y, ob_wall)&amp;&amp; direction!=180&amp;&amp;x&lt;ob_pl.x) {
               sprite_index=sun_right;
               direction=0;
               speed=2;
           }  
           //================
         else if (!place_meeting(x, y-10, ob_wall)&amp;&amp; direction!=270) {
               sprite_index=sun_u;
               direction=90;
               speed=2;
           }
         else if (!place_meeting(x+10, y, ob_wall)&amp;&amp; direction!=180) {
               sprite_index=sun_right;
               direction=0;
               speed=2;
           } 
         else if (!place_meeting(x-10, y, ob_wall)&amp;&amp; direction!=0) {
               sprite_index=sun_l;
               direction=180;
               speed=2;
           } 
          else if (!place_meeting(x, y+10, ob_wall)&amp;&amp; !place_meeting(x, y+10, ob_wall)&amp;&amp; direction!=90) {
               sprite_index=sun_b;
               direction=270;
               speed=2;
           } 
        
         else if (!place_meeting(x, y-10, ob_wall)) {
               sprite_index=sun_u;
               direction=90;
               speed=2;
           }
           
         else if (!place_meeting(x+10, y, ob_wall)) {
               sprite_index=sun_right;
               direction=0;
               speed=2;
           } 
         else if (!place_meeting(x-10, y, ob_wall)) {
               sprite_index=sun_l;
               direction=180;
               speed=2;
           } 
          else if (!place_meeting(x, y+10, ob_wall)&amp;&amp; !place_meeting(x, y+10, ob_wall)) {
               sprite_index=sun_b;
               direction=270;
               speed=2;
           } 
        
    }
    else{
         var z = random_range(0,1);
         if (!place_meeting(x, y-10, ob_wall)&amp;&amp; direction!=270&amp;&amp; z&lt;=0.75) {
               sprite_index=sun_u;
               direction=90;
               speed=2;
           }
           
         else if (!place_meeting(x+10, y, ob_wall)&amp;&amp; direction!=180&amp;&amp; z&lt;=0.75) {
               sprite_index=sun_right;
               direction=0;
               speed=2;
           } 
        else if (!place_meeting(x-10, y, ob_wall)&amp;&amp; direction!=0) {
               sprite_index=sun_l;
               direction=180;
               speed=2;
           } 
        else if (!place_meeting(x, y+10, ob_wall)&amp;&amp; !place_meeting(x, y+10, ob_wall)&amp;&amp; direction!=90) {
               sprite_index=sun_b;
               direction=270;
               speed=2;
           } 
        else if (!place_meeting(x, y-10, ob_wall)) {
               sprite_index=sun_u;
               direction=90;
               speed=2;
           }
         else if (!place_meeting(x+10, y, ob_wall)) {
               sprite_index=sun_right;
               direction=0;
               speed=2;
           } 
         
         else if (!place_meeting(x-10, y, ob_wall)) {
               sprite_index=sun_l;
               direction=180;
               speed=2;
           } 
          else if (!place_meeting(x, y+10, ob_wall)&amp;&amp; !place_meeting(x, y+10, ob_wall)) {
               sprite_index=sun_b;
               direction=270;
               speed=2;
           } 
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
